group 'org.example'
version '1.0'

buildscript {
    ext.kotlin_version = '1.2.61'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin2js'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
}

compileKotlin2Js {
    kotlinOptions.metaInfo = false
}

processResources {
    filter { String line -> line.replace("@MODULE_VERSION@", version as String) }
}

task generateMetadata(type: Copy) {
    from "src/main/kotlin/resources/metadata.json"
    into modulesDir
    filter { line -> line.replaceAll("@MODULE_VERSION@", version as String) }
}

task assembleWeb(type: Sync) {
    configurations.compile.each { file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") &&
                        (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/")) &&
                        !path.endsWith(".meta.js") &&
                        !path.startsWith("kotlin.js")
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into modulesDir

    dependsOn classes
    dependsOn 'generateMetadata'
    tasks.findByName('generateMetadata').mustRunAfter classes
}

assemble.dependsOn assembleWeb